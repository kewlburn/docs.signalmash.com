var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"https://kewlburn.github.io/docs.signalmash.com/docs/getting-started/introduction/",title:"Introduction",description:"Welcome to the Signalmash API docs! How to use Signalmash services and products in your app can be found here in official Signalmash documentation.",content:`Welcome to the Signalmash API docs! How to use Signalmash services and products in your app can be found here in official Signalmash documentation.
For each of our APIs, this site offers thorough documentation, and the section devoted to that API will have all the information you require.
However, there are some fundamental ideas you must comprehend and resources that could be useful that apply to all of our APIs. Here, we\u0026rsquo;ll give you this knowledge and help you get going as soon as possible.
What you will learn: # Signing up for an account Accessing API Token information Experimenting with our APIs Working with Webhooks What to do next Signing up for an account # You must sign up for an account in order to use our APIs. You will receive an API token and key as a result, which you can use to access our APIs.
Accessing API Token information # By creating tokens on the user\u0026rsquo;s website, you can authenticate the user for each API request. Thanks to a single management location, users can now use the same or different tokens for each activity they perform.
After logging into the portal, choose \u0026ldquo;Tokens\u0026rdquo; from the submenu under the API Menu. A token can be created by clicking \u0026ldquo;Add New\u0026rdquo; in the right upper corner. A pop-up window will appear. Select the function or functions to link to the token.
Authentication # Your requests need to be authenticated when using the Signalmash APIs. Most often, this is accomplished with Bearer Authentication.
The HTTP authentication method known as Bearer Authentication (also known as \u0026ldquo;token authentication\u0026rdquo;) uses bearer tokens as security tokens.
When sending requests to protected resources, the client must include this token in the Authorization header:
Authorization: Bearer \u0026lt;token\u0026gt;
Experimenting with our APIs # You should eventually create an app in the programming language of your choice. But first, you might want to send some practice requests to our APIs to make sure you have the right input parameters and are receiving the desired results.
You will find Curl snippets for each of our APIs that you can copy, paste, and alter if you are familiar with the command-line tool Curl.
Postman # There are many GUI tools available that are simpler to use than Curl. One of them is Postman. In order to get started using the APIs right away, Signalmash also offers a selection of Postman collections.
Working with Webhooks # Webhooks are user-defined HTTP callbacks triggered by an event in a web application. Signalmash uses webhooks to let your application know when events happen, like getting an incoming call or receiving an SMS message and SMS states. Webhooks are triggered asynchronously.
To handle a webhook when you use Signalmash, you need to build a small web application that can accept HTTP POST requests.
What to do next # In this guide, we\u0026rsquo;ve introduced some of the fundamental concepts and resources you should be familiar with before using our APIs.
View the documentation for your chosen API to get started, or try out some of the following starter tasks once you have a firm grasp of these fundamental ideas and have installed the tools you intend to use.
SMS API: Send an SMS Voice API: Make an outbound call Although we are proud of our documentation, we are constantly looking for ways to improve it. Please provide feedback for the relevant topic if you discover anything that is unclear or lacking the information you need. Let us know if we did a good job if you think a certain section was completed.
`}),e.add({id:1,href:"https://kewlburn.github.io/docs.signalmash.com/docs/getting-started/",title:"Getting Started",description:"Getting Started.",content:""}),e.add({id:2,href:"https://kewlburn.github.io/docs.signalmash.com/docs/getting-started/authentication/",title:"Authentication",description:`The Bearer authentication (also known as token authentication) is the authentication method used by Signalmash APIs. Signalmash supports standard token authentication methods for installed, client-side, web server, and mobile application applications.
Obtain API token credentials from the Signalmash Portal to get started. Then, your client application asks the Signalmash API login for an access token, takes a session token out of the response, and sends it to the Signalmash API you want to access.`,content:`The Bearer authentication (also known as token authentication) is the authentication method used by Signalmash APIs. Signalmash supports standard token authentication methods for installed, client-side, web server, and mobile application applications.
Obtain API token credentials from the Signalmash Portal to get started. Then, your client application asks the Signalmash API login for an access token, takes a session token out of the response, and sends it to the Signalmash API you want to access.
Basic Authentication Steps # 1. Obtain API token credentials from Signalmash Portal. # To get token credentials, such as a API KEY that are known to both Signalmash and your application, go to the Signalmash Portal (go to the API Menu and select \u0026ldquo;Tokens\u0026rdquo; from the submenu).
2. Include the API KEY in header when requesting to an API endpoints. # For endpoints authentication, you will use your Signalmash API KEY as your Bearer token.
# Get all campaigns $ curl -X POST -H \u0026quot;Authorization: Bearer API_KEY\u0026quot; \\ https://api.signalmash.com/campaigns Revoking API Token # An application\u0026rsquo;s access may occasionally be revoked by a user. By visiting Signalmash Portal, selecting \u0026ldquo;Tokens\u0026rdquo; from the submenu, and clicking the delete icon, a user can revoke access.
`}),e.add({id:3,href:"https://kewlburn.github.io/docs.signalmash.com/docs/sms/",title:"Messaging",description:"Messaging docs",content:""}),e.add({id:4,href:"https://kewlburn.github.io/docs.signalmash.com/docs/sms/sms/",title:"SMS",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:`Get started # There are two main ways to get started with Doks:
Tutorial # ðŸ‘‰ The Tutorial is intended for novice to intermediate users. Step-by-step instructions on how to start a new Doks project. Tutorial â†’
Quick Start # ðŸ‘‰ The Quick Start is intended for intermediate to advanced users. Go further # Recipes, Reference Guides, Extensions, and Showcase.
Recipes # Get instructions on how to accomplish common tasks with Doks. Recipes â†’
Reference Guides # Learn how to customize Doks to fully make it your own. Reference Guides â†’
Extensions # Get instructions on how to add even more to Doks. Extensions â†’
Showcase # See what others have build with Doks. Showcase â†’
Contributing # Find out how to contribute to Doks. Contributing â†’
`}),e.add({id:5,href:"https://kewlburn.github.io/docs.signalmash.com/docs/sms/mms/",title:"MMS",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:`Get started # There are two main ways to get started with Doks:
Tutorial # ðŸ‘‰ The Tutorial is intended for novice to intermediate users. Step-by-step instructions on how to start a new Doks project. Tutorial â†’
Quick Start # ðŸ‘‰ The Quick Start is intended for intermediate to advanced users. Go further # Recipes, Reference Guides, Extensions, and Showcase.
Recipes # Get instructions on how to accomplish common tasks with Doks. Recipes â†’
Reference Guides # Learn how to customize Doks to fully make it your own. Reference Guides â†’
Extensions # Get instructions on how to add even more to Doks. Extensions â†’
Showcase # See what others have build with Doks. Showcase â†’
Contributing # Find out how to contribute to Doks. Contributing â†’
`}),e.add({id:6,href:"https://kewlburn.github.io/docs.signalmash.com/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()